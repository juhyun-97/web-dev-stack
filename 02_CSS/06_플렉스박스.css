.container {
  /* container를 display:flex */
  /* 배경,바깥여백,태두리 */
  display: flex;
  background: #f0f0f0;
  padding: 1rem;
  border: 1px solid #ccc;
}
.tall {
  height: 300px;
}
.item {
  background-color: white;
  border: 2px solid #333;
  padding: 1rem;
  text-align: center;
}
/* flex-direction */
#fd {
  /* row = 가로방향(기본값), 왼쪽부터 123... */
  flex-direction: row;
  /* row-reverse = 가로반대방향, 오른쪽 끝부터 123... */
  flex-direction: row-reverse;
  /* column = 세로방향, 위쪽부터 123... */
  flex-direction: column;
  /* column-reverse = 세로반대방향, 아래부터 123... */
  flex-direction: column-reverse;
}
/* justify-content(정렬, 순서변동없음) */
#jc {
  /* flex-start = 왼쪽정렬(기본값), 왼쪽부터 123.... */
  justify-content: flex-start;
  /* flex-end = 끝오른쪽정렬, 오른쪽부터 123...(123그대로 오른쪽으로 치우침) */
  justify-content: flex-end;
  /* center = 정가운데 정렬 */
  justify-content: center;
  /* space-between = 양끝 정렬, 양끝에 붙고 그 사이를 골고루 간격을줌 */
  justify-content: space-between;
  /* space-around = item 기준으로 양 옆을 균일하게 정렬 */
  justify-content: space-around;
  /* space-evenly = item 사이를 완전 균일하게 정렬 
    between > around > evenly */
  justify-content: space-evenly;
}
/* align-items */
#ai {
  /* stretch = 높이 자동확장(기본값) */
  align-items: stretch;
  /* flex-start = 왼쪽 상단을 시작점으로 정렬 */
  align-items: flex-start;
  /* flex-end = 왼쪽 하단을 시작점으로 정렬 */
  align-items: flex-end;
  /* center = 수직 중앙정렬(완전한 가운데정렬 아님) */
  align-items: center;
  /* 완전한 가운데 정렬 하고싶으면 align-items, justify content center 같이 써야함 */
}
/* flex-wrap */
#fw {
  /* nowrap = 줄바꿈없음(기본값) */
  flex-wrap: nowrap;
  /* wrap = 줄바꿈있음(아래로 흘러내려감) */
  flex-wrap: wrap;
  /* wrap-reverse = 역방향으로 줄바꿈(위로 흘러올라감) */
  flex-wrap: wrap-reverse;
}
#fw .item {
  width: 100px;
  height: 100px;
}
/* align-self */
.self-start {
  /* 해당 item 하나만 왼쪽 상단 정렬 */
  align-self: flex-start;
}
.self-center {
  /* 해당 item 하나만 가운데 정렬 */
  align-self: center;
}
.self-end {
  /* 해당 item 하나만 오른쪽 하단 정렬 */
  align-self: flex-end;
}
/* order */
/* x축,y축 그래프 생각하여 순서변경 */
.order1 {
  order: 2;
}
.order3 {
  order: -1;
}
/* gap (아이템 사이 간격만) */
#gap {
  gap: 20px;
}
#gap .item {
  /* margin: 20px; */
}
/* felx-grow */
/* 부모인 컨테이너를 제외한 남은공간만큼 해당 아이템으로 채움
  컨테이너보다 아이템이 작을때 
  flex-grow 값이 클수록 남은 공간을 더 많이 차지한다 */
#grow-1 {
  flex-grow: 1;
}
#grow-2 {
  flex-grow: 2;
}
#grow-3 {
  flex-grow: 3;
}
/* flex-shrink */
/* 컨테이너보다 아이템이 클때
flex-shrink 값이 작을수록 더 적게 줄어든다
0일때는 아예 줄어들지 않는다 */
#shrink .item {
  width: 300px;
}
#shrink-1 {
  flex-shrink: 0;
}
#shrink-2 {
  flex-shrink: 1;
}
#shrink-3 {
  flex-shrink: 2;
}
/* flex-basis     = width*/
#basis-1 {
  flex-basis: 100px;
}
#basis-2 {
  flex-basis: 200px;
}
#basis-3 {
  flex-basis: 150px;
}
/* flex : flex-grow flex-shrink flex-basis */
#flex-1 {
  flex: 0 1 auto;
}
#flex-2 {
  /* grow: 1, shrink: 1, basis: 0% */
  flex: 1;
}
#flex-3 {
  /* 절대고정 */
  flex: none;
}
/* align-content */
#ac {
  flex-wrap: wrap;
  height: 200px;
  /* flex-start 상단 정렬 */
  align-content: flex-start;
  /* center 중앙 정렬 */
  align-content: center;
  /* space-between 양끝 정렬 */
  align-content: space-between;
}
